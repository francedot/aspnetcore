#nullable enable
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck! instance, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = null, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = null, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddTypeActivatedCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, System.Collections.Generic.IEnumerable<string!>? tags, System.TimeSpan? timeout, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options, params object![]! args) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.Tasks.ValueTask<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckOptions? options = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
